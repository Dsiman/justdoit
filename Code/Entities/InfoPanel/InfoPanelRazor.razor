@using Sandbox
@using Sandbox.UI
@inherits PanelComponent
@namespace Sandbox

<style>
    .dialog-box {
        width: 100%;
        height: 100%;
        background-color: @GetCssColor(BackgroundColor);
        padding: 24px;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        font-family: Poppins;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
        border-left: 8px solid @GetCssColor(ModeBorderColor);
        border-right: 8px solid @GetCssColor(ModeBorderColor);
        transition: transform 0.3s ease, opacity 0.3s ease;
    }
    
    .dialog-box::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, 
            @GetCssColor(ModeBorderColor), 
            rgba(255,255,255,0.3));
    }
    
    .icon {
        font-size: 42px;
        margin-bottom: 16px;
        color: @GetCssColor(ModeIconColor);
        text-shadow: 0 2px 4px rgba(0,0,0,0.2);
        z-index: 1;
        flex-shrink: 0;
    }
    
    .message {
        font-size: 22px;
        color: @GetCssColor(TextColor);
        text-align: center;
        line-height: 1.4;
        font-weight: 500;
        z-index: 1;
        text-shadow: 0 1px 2px rgba(0,0,0,0.1);
        padding: 0 10px;
        height: 100%;
        width: 100%;
        /* Fixed word wrapping properties */
        word-break: normal;
    }
    
    .hidden {
        opacity: 0;
        transform: translateY(20px);
        pointer-events: none;
    }
</style>

<root>
    <div class="dialog-box @(IsVisible ? "" : "hidden")">
        <div class="icon">
            @Icon
        </div>
        <div class="message">@InfoText</div>
    </div>
</root>

@code {
    public bool IsVisible { get; set; } = true;
    public string Icon { get; set; } = "ℹ️"; 
    public string InfoText { get; set; } = "Info Panel";
    public Color TextColor { get; set; } = Color.White;
    public Color BackgroundColor { get; set; } = Color.White;
    public Color ModeBorderColor { get; set; } = Color.Black;
    public Color ModeIconColor { get; set; } = Color.White;
    
    private string GetCssColor(Color color)
    {
        return $"rgba({(int)(color.r * 255)}, {(int)(color.g * 255)}, {(int)(color.b * 255)}, {color.a})";
    }
    
    protected override int BuildHash() =>
        System.HashCode.Combine(IsVisible, Icon, InfoText, TextColor, BackgroundColor, ModeBorderColor, ModeIconColor);
}